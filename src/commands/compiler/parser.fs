// Implementation file for parser generated by fsyacc
module Aestas.Commands.Compiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 2 "parser.fsy"

open Aestas.Commands.Compiler.Language

# 10 "parser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | NEWLINE
  | SPACE
  | POWER
  | DOT
  | COMMA
  | COLON
  | RIGHT_ARROW
  | BINOP_COMP of (string)
  | EQUAL
  | TAILPATTERN
  | BINOP_1 of (string)
  | BINOP_0 of (string)
  | PIPE
  | RIGHT_PAREN
  | LEFT_PAREN
  | RIGHT_BRACK
  | LEFT_BRACK
  | RIGHT_BRACE
  | LEFT_BRACE
  | ELSE
  | THEN
  | IF
  | FALSE
  | TRUE
  | LET
  | LAMBDA
  | STRING of (string)
  | ID of (string)
  | NUMBER of (float)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_NEWLINE
    | TOKEN_SPACE
    | TOKEN_POWER
    | TOKEN_DOT
    | TOKEN_COMMA
    | TOKEN_COLON
    | TOKEN_RIGHT_ARROW
    | TOKEN_BINOP_COMP
    | TOKEN_EQUAL
    | TOKEN_TAILPATTERN
    | TOKEN_BINOP_1
    | TOKEN_BINOP_0
    | TOKEN_PIPE
    | TOKEN_RIGHT_PAREN
    | TOKEN_LEFT_PAREN
    | TOKEN_RIGHT_BRACK
    | TOKEN_LEFT_BRACK
    | TOKEN_RIGHT_BRACE
    | TOKEN_LEFT_BRACE
    | TOKEN_ELSE
    | TOKEN_THEN
    | TOKEN_IF
    | TOKEN_FALSE
    | TOKEN_TRUE
    | TOKEN_LET
    | TOKEN_LAMBDA
    | TOKEN_STRING
    | TOKEN_ID
    | TOKEN_NUMBER
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startparse
    | NONTERM_parse
    | NONTERM_lines
    | NONTERM_rev_lines
    | NONTERM_expr
    | NONTERM_bind
    | NONTERM_tuple
    | NONTERM_rev_tuple
    | NONTERM_maybe_space
    | NONTERM_value_expr
    | NONTERM_if
    | NONTERM_atom_or_lines
    | NONTERM_expr_or_lines
    | NONTERM_rev_args
    | NONTERM_rev_fargs
    | NONTERM_ftuple
    | NONTERM_rev_ftuple
    | NONTERM_fatom
    | NONTERM_atom
    | NONTERM_atom_eq
    | NONTERM_atom_plus
    | NONTERM_atom_mul
    | NONTERM_atom_powertuple
    | NONTERM_rev_power_tuple
    | NONTERM_atom_field
    | NONTERM_atom_unary
    | NONTERM_term

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | NEWLINE  -> 1 
  | SPACE  -> 2 
  | POWER  -> 3 
  | DOT  -> 4 
  | COMMA  -> 5 
  | COLON  -> 6 
  | RIGHT_ARROW  -> 7 
  | BINOP_COMP _ -> 8 
  | EQUAL  -> 9 
  | TAILPATTERN  -> 10 
  | BINOP_1 _ -> 11 
  | BINOP_0 _ -> 12 
  | PIPE  -> 13 
  | RIGHT_PAREN  -> 14 
  | LEFT_PAREN  -> 15 
  | RIGHT_BRACK  -> 16 
  | LEFT_BRACK  -> 17 
  | RIGHT_BRACE  -> 18 
  | LEFT_BRACE  -> 19 
  | ELSE  -> 20 
  | THEN  -> 21 
  | IF  -> 22 
  | FALSE  -> 23 
  | TRUE  -> 24 
  | LET  -> 25 
  | LAMBDA  -> 26 
  | STRING _ -> 27 
  | ID _ -> 28 
  | NUMBER _ -> 29 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_NEWLINE 
  | 2 -> TOKEN_SPACE 
  | 3 -> TOKEN_POWER 
  | 4 -> TOKEN_DOT 
  | 5 -> TOKEN_COMMA 
  | 6 -> TOKEN_COLON 
  | 7 -> TOKEN_RIGHT_ARROW 
  | 8 -> TOKEN_BINOP_COMP 
  | 9 -> TOKEN_EQUAL 
  | 10 -> TOKEN_TAILPATTERN 
  | 11 -> TOKEN_BINOP_1 
  | 12 -> TOKEN_BINOP_0 
  | 13 -> TOKEN_PIPE 
  | 14 -> TOKEN_RIGHT_PAREN 
  | 15 -> TOKEN_LEFT_PAREN 
  | 16 -> TOKEN_RIGHT_BRACK 
  | 17 -> TOKEN_LEFT_BRACK 
  | 18 -> TOKEN_RIGHT_BRACE 
  | 19 -> TOKEN_LEFT_BRACE 
  | 20 -> TOKEN_ELSE 
  | 21 -> TOKEN_THEN 
  | 22 -> TOKEN_IF 
  | 23 -> TOKEN_FALSE 
  | 24 -> TOKEN_TRUE 
  | 25 -> TOKEN_LET 
  | 26 -> TOKEN_LAMBDA 
  | 27 -> TOKEN_STRING 
  | 28 -> TOKEN_ID 
  | 29 -> TOKEN_NUMBER 
  | 32 -> TOKEN_end_of_input
  | 30 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startparse 
    | 1 -> NONTERM_parse 
    | 2 -> NONTERM_lines 
    | 3 -> NONTERM_lines 
    | 4 -> NONTERM_lines 
    | 5 -> NONTERM_lines 
    | 6 -> NONTERM_lines 
    | 7 -> NONTERM_lines 
    | 8 -> NONTERM_lines 
    | 9 -> NONTERM_rev_lines 
    | 10 -> NONTERM_rev_lines 
    | 11 -> NONTERM_rev_lines 
    | 12 -> NONTERM_rev_lines 
    | 13 -> NONTERM_expr 
    | 14 -> NONTERM_expr 
    | 15 -> NONTERM_bind 
    | 16 -> NONTERM_bind 
    | 17 -> NONTERM_bind 
    | 18 -> NONTERM_bind 
    | 19 -> NONTERM_tuple 
    | 20 -> NONTERM_tuple 
    | 21 -> NONTERM_rev_tuple 
    | 22 -> NONTERM_rev_tuple 
    | 23 -> NONTERM_rev_tuple 
    | 24 -> NONTERM_maybe_space 
    | 25 -> NONTERM_maybe_space 
    | 26 -> NONTERM_value_expr 
    | 27 -> NONTERM_value_expr 
    | 28 -> NONTERM_value_expr 
    | 29 -> NONTERM_value_expr 
    | 30 -> NONTERM_value_expr 
    | 31 -> NONTERM_value_expr 
    | 32 -> NONTERM_value_expr 
    | 33 -> NONTERM_value_expr 
    | 34 -> NONTERM_if 
    | 35 -> NONTERM_if 
    | 36 -> NONTERM_atom_or_lines 
    | 37 -> NONTERM_atom_or_lines 
    | 38 -> NONTERM_expr_or_lines 
    | 39 -> NONTERM_expr_or_lines 
    | 40 -> NONTERM_rev_args 
    | 41 -> NONTERM_rev_args 
    | 42 -> NONTERM_rev_fargs 
    | 43 -> NONTERM_rev_fargs 
    | 44 -> NONTERM_ftuple 
    | 45 -> NONTERM_ftuple 
    | 46 -> NONTERM_rev_ftuple 
    | 47 -> NONTERM_rev_ftuple 
    | 48 -> NONTERM_fatom 
    | 49 -> NONTERM_fatom 
    | 50 -> NONTERM_fatom 
    | 51 -> NONTERM_atom 
    | 52 -> NONTERM_atom_eq 
    | 53 -> NONTERM_atom_eq 
    | 54 -> NONTERM_atom_eq 
    | 55 -> NONTERM_atom_plus 
    | 56 -> NONTERM_atom_plus 
    | 57 -> NONTERM_atom_mul 
    | 58 -> NONTERM_atom_mul 
    | 59 -> NONTERM_atom_powertuple 
    | 60 -> NONTERM_rev_power_tuple 
    | 61 -> NONTERM_rev_power_tuple 
    | 62 -> NONTERM_atom_field 
    | 63 -> NONTERM_atom_field 
    | 64 -> NONTERM_atom_unary 
    | 65 -> NONTERM_atom_unary 
    | 66 -> NONTERM_atom_unary 
    | 67 -> NONTERM_term 
    | 68 -> NONTERM_term 
    | 69 -> NONTERM_term 
    | 70 -> NONTERM_term 
    | 71 -> NONTERM_term 
    | 72 -> NONTERM_term 
    | 73 -> NONTERM_term 
    | 74 -> NONTERM_term 
    | 75 -> NONTERM_term 
    | 76 -> NONTERM_term 
    | 77 -> NONTERM_term 
    | 78 -> NONTERM_term 
    | 79 -> NONTERM_term 
    | 80 -> NONTERM_term 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 32 
let _fsyacc_tagOfErrorTerminal = 30

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | NEWLINE  -> "NEWLINE" 
  | SPACE  -> "SPACE" 
  | POWER  -> "POWER" 
  | DOT  -> "DOT" 
  | COMMA  -> "COMMA" 
  | COLON  -> "COLON" 
  | RIGHT_ARROW  -> "RIGHT_ARROW" 
  | BINOP_COMP _ -> "BINOP_COMP" 
  | EQUAL  -> "EQUAL" 
  | TAILPATTERN  -> "TAILPATTERN" 
  | BINOP_1 _ -> "BINOP_1" 
  | BINOP_0 _ -> "BINOP_0" 
  | PIPE  -> "PIPE" 
  | RIGHT_PAREN  -> "RIGHT_PAREN" 
  | LEFT_PAREN  -> "LEFT_PAREN" 
  | RIGHT_BRACK  -> "RIGHT_BRACK" 
  | LEFT_BRACK  -> "LEFT_BRACK" 
  | RIGHT_BRACE  -> "RIGHT_BRACE" 
  | LEFT_BRACE  -> "LEFT_BRACE" 
  | ELSE  -> "ELSE" 
  | THEN  -> "THEN" 
  | IF  -> "IF" 
  | FALSE  -> "FALSE" 
  | TRUE  -> "TRUE" 
  | LET  -> "LET" 
  | LAMBDA  -> "LAMBDA" 
  | STRING _ -> "STRING" 
  | ID _ -> "ID" 
  | NUMBER _ -> "NUMBER" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | NEWLINE  -> (null : System.Object) 
  | SPACE  -> (null : System.Object) 
  | POWER  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | RIGHT_ARROW  -> (null : System.Object) 
  | BINOP_COMP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EQUAL  -> (null : System.Object) 
  | TAILPATTERN  -> (null : System.Object) 
  | BINOP_1 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINOP_0 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PIPE  -> (null : System.Object) 
  | RIGHT_PAREN  -> (null : System.Object) 
  | LEFT_PAREN  -> (null : System.Object) 
  | RIGHT_BRACK  -> (null : System.Object) 
  | LEFT_BRACK  -> (null : System.Object) 
  | RIGHT_BRACE  -> (null : System.Object) 
  | LEFT_BRACE  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | LET  -> (null : System.Object) 
  | LAMBDA  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NUMBER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us;65535us;1us;65535us;0us;1us;3us;65535us;0us;2us;86us;87us;90us;91us;4us;65535us;0us;5us;7us;8us;86us;5us;90us;5us;14us;65535us;0us;14us;7us;14us;9us;15us;10us;15us;11us;13us;12us;13us;27us;93us;32us;93us;35us;93us;40us;93us;59us;93us;64us;93us;86us;14us;90us;14us;14us;65535us;0us;17us;7us;17us;9us;17us;10us;17us;11us;17us;12us;17us;27us;17us;32us;17us;35us;17us;40us;17us;59us;17us;64us;17us;86us;17us;90us;17us;15us;65535us;0us;16us;7us;16us;9us;16us;10us;16us;11us;16us;12us;16us;27us;16us;32us;16us;35us;16us;40us;16us;59us;16us;64us;16us;86us;16us;90us;16us;147us;149us;15us;65535us;0us;42us;7us;42us;9us;42us;10us;42us;11us;42us;12us;42us;27us;42us;32us;42us;35us;42us;40us;42us;59us;42us;64us;42us;86us;42us;90us;42us;147us;42us;26us;65535us;20us;21us;22us;23us;24us;25us;26us;27us;29us;30us;31us;32us;34us;35us;37us;38us;39us;40us;43us;70us;44us;45us;46us;47us;54us;55us;56us;57us;58us;59us;61us;62us;63us;64us;71us;72us;86us;147us;90us;147us;100us;101us;102us;103us;106us;107us;108us;109us;146us;147us;149us;150us;16us;65535us;0us;43us;7us;43us;9us;43us;10us;43us;11us;43us;12us;43us;27us;43us;32us;43us;35us;43us;40us;43us;45us;46us;59us;43us;64us;43us;86us;43us;90us;43us;147us;43us;0us;65535us;3us;65535us;75us;76us;79us;80us;83us;84us;6us;65535us;27us;28us;32us;33us;35us;36us;40us;41us;59us;60us;64us;65us;2us;65535us;43us;68us;46us;68us;2us;65535us;20us;29us;52us;61us;2us;65535us;19us;37us;107us;108us;2us;65535us;19us;98us;107us;98us;3us;65535us;19us;99us;101us;102us;107us;99us;22us;65535us;0us;85us;7us;85us;9us;85us;10us;85us;11us;85us;12us;85us;27us;85us;32us;85us;35us;85us;40us;85us;45us;85us;49us;94us;59us;85us;64us;85us;69us;95us;72us;73us;75us;89us;79us;89us;83us;89us;86us;85us;90us;85us;147us;85us;24us;65535us;0us;111us;7us;111us;9us;111us;10us;111us;11us;111us;12us;111us;27us;111us;32us;111us;35us;111us;40us;111us;45us;111us;49us;111us;59us;111us;64us;111us;69us;111us;72us;111us;75us;111us;79us;111us;83us;111us;86us;111us;90us;111us;115us;113us;116us;114us;147us;111us;25us;65535us;0us;112us;7us;112us;9us;112us;10us;112us;11us;112us;12us;112us;27us;112us;32us;112us;35us;112us;40us;112us;45us;112us;49us;112us;59us;112us;64us;112us;69us;112us;72us;112us;75us;112us;79us;112us;83us;112us;86us;112us;90us;112us;115us;112us;116us;112us;119us;118us;147us;112us;26us;65535us;0us;117us;7us;117us;9us;117us;10us;117us;11us;117us;12us;117us;27us;117us;32us;117us;35us;117us;40us;117us;45us;117us;49us;117us;59us;117us;64us;117us;69us;117us;72us;117us;75us;117us;79us;117us;83us;117us;86us;117us;90us;117us;115us;117us;116us;117us;119us;117us;122us;121us;147us;117us;26us;65535us;0us;120us;7us;120us;9us;120us;10us;120us;11us;120us;12us;120us;27us;120us;32us;120us;35us;120us;40us;120us;45us;120us;49us;120us;59us;120us;64us;120us;69us;120us;72us;120us;75us;120us;79us;120us;83us;120us;86us;120us;90us;120us;115us;120us;116us;120us;119us;120us;122us;120us;147us;120us;26us;65535us;0us;123us;7us;123us;9us;123us;10us;123us;11us;123us;12us;123us;27us;123us;32us;123us;35us;123us;40us;123us;45us;123us;49us;123us;59us;123us;64us;123us;69us;123us;72us;123us;75us;123us;79us;123us;83us;123us;86us;123us;90us;123us;115us;123us;116us;123us;119us;123us;122us;123us;147us;123us;28us;65535us;0us;124us;7us;124us;9us;124us;10us;124us;11us;124us;12us;124us;27us;124us;32us;124us;35us;124us;40us;124us;45us;124us;49us;124us;59us;124us;64us;124us;69us;124us;72us;124us;75us;124us;79us;124us;83us;124us;86us;124us;90us;124us;115us;124us;116us;124us;119us;124us;122us;124us;125us;126us;129us;128us;147us;124us;28us;65535us;0us;127us;7us;127us;9us;127us;10us;127us;11us;127us;12us;127us;27us;127us;32us;127us;35us;127us;40us;127us;45us;127us;49us;127us;59us;127us;64us;127us;69us;127us;72us;127us;75us;127us;79us;127us;83us;127us;86us;127us;90us;127us;115us;127us;116us;127us;119us;127us;122us;127us;125us;127us;129us;127us;147us;127us;29us;65535us;0us;130us;7us;130us;9us;130us;10us;130us;11us;130us;12us;130us;27us;130us;32us;130us;35us;130us;40us;130us;45us;130us;49us;130us;59us;130us;64us;130us;69us;130us;72us;130us;75us;130us;79us;130us;83us;130us;86us;130us;90us;130us;115us;130us;116us;130us;119us;130us;122us;130us;125us;130us;129us;130us;131us;133us;147us;130us;|]
let _fsyacc_sparseGotoTableRowOffsets = [|0us;1us;3us;7us;12us;27us;42us;58us;74us;101us;118us;119us;123us;130us;133us;136us;139us;142us;146us;169us;194us;220us;247us;274us;301us;330us;359us;|]
let _fsyacc_stateToProdIdxsTableElements = [| 1us;0us;1us;0us;1us;1us;2us;3us;67us;1us;3us;5us;4us;5us;8us;11us;12us;1us;4us;2us;6us;7us;4us;6us;7us;11us;12us;3us;7us;11us;12us;3us;8us;11us;12us;1us;9us;2us;9us;24us;1us;9us;1us;10us;1us;11us;1us;13us;1us;14us;4us;15us;16us;17us;18us;4us;15us;16us;17us;18us;5us;15us;16us;17us;48us;49us;2us;15us;17us;1us;15us;1us;15us;1us;15us;1us;15us;1us;15us;1us;15us;1us;15us;2us;16us;43us;1us;16us;1us;16us;1us;16us;1us;16us;1us;17us;1us;17us;1us;17us;1us;18us;1us;18us;1us;18us;1us;18us;1us;18us;3us;20us;22us;23us;5us;21us;28us;29us;30us;31us;2us;22us;23us;1us;22us;5us;22us;28us;29us;30us;31us;2us;22us;31us;1us;24us;2us;24us;40us;2us;24us;42us;2us;24us;43us;2us;26us;27us;2us;26us;42us;1us;26us;1us;26us;1us;26us;1us;26us;1us;26us;1us;26us;1us;26us;2us;27us;43us;1us;27us;1us;27us;1us;27us;1us;27us;1us;28us;1us;28us;3us;29us;30us;41us;2us;29us;41us;1us;31us;1us;31us;1us;31us;1us;31us;1us;32us;1us;32us;1us;32us;1us;32us;1us;32us;1us;32us;1us;32us;1us;32us;1us;32us;1us;32us;1us;32us;1us;33us;3us;36us;79us;80us;1us;36us;1us;36us;1us;37us;3us;38us;79us;80us;1us;38us;1us;38us;1us;39us;1us;40us;1us;41us;1us;42us;1us;43us;2us;45us;47us;1us;46us;1us;47us;1us;47us;1us;47us;1us;47us;2us;48us;49us;1us;48us;1us;50us;1us;50us;1us;50us;1us;50us;1us;50us;3us;51us;53us;54us;2us;52us;56us;3us;53us;53us;54us;3us;53us;54us;54us;1us;53us;1us;54us;2us;55us;58us;2us;56us;56us;1us;56us;1us;57us;2us;58us;58us;1us;58us;2us;59us;61us;2us;60us;63us;1us;61us;2us;61us;63us;1us;62us;2us;63us;63us;1us;63us;1us;64us;3us;65us;66us;69us;2us;65us;75us;1us;66us;1us;67us;1us;68us;1us;69us;1us;70us;1us;71us;1us;72us;1us;73us;1us;74us;1us;75us;1us;76us;1us;77us;1us;78us;2us;79us;80us;2us;79us;80us;1us;79us;1us;80us;1us;80us;1us;80us;|]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us;2us;4us;6us;9us;11us;17us;19us;22us;27us;31us;35us;37us;40us;42us;44us;46us;48us;50us;55us;60us;66us;69us;71us;73us;75us;77us;79us;81us;83us;86us;88us;90us;92us;94us;96us;98us;100us;102us;104us;106us;108us;110us;114us;120us;123us;125us;131us;134us;136us;139us;142us;145us;148us;151us;153us;155us;157us;159us;161us;163us;165us;168us;170us;172us;174us;176us;178us;180us;184us;187us;189us;191us;193us;195us;197us;199us;201us;203us;205us;207us;209us;211us;213us;215us;217us;219us;223us;225us;227us;229us;233us;235us;237us;239us;241us;243us;245us;247us;250us;252us;254us;256us;258us;260us;263us;265us;267us;269us;271us;273us;275us;279us;282us;286us;290us;292us;294us;297us;300us;302us;304us;307us;309us;312us;315us;317us;320us;322us;325us;327us;329us;333us;336us;338us;340us;342us;344us;346us;348us;350us;352us;354us;356us;358us;360us;362us;365us;368us;370us;372us;374us;|]
let _fsyacc_action_rows = 152
let _fsyacc_actionTableElements = [|19us;16386us;0us;16403us;1us;7us;2us;11us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;3us;29us;142us;0us;49152us;0us;16385us;1us;16451us;0us;4us;0us;16387us;2us;16389us;0us;6us;1us;10us;0us;16388us;17us;16403us;2us;11us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;134us;29us;142us;1us;16390us;1us;9us;17us;16391us;1us;16396us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;134us;29us;142us;18us;16392us;0us;16396us;1us;16396us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;134us;29us;142us;16us;16403us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;134us;29us;142us;17us;16403us;2us;16408us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;134us;29us;142us;0us;16393us;0us;16394us;0us;16395us;0us;16397us;0us;16398us;1us;32768us;2us;19us;2us;16428us;15us;106us;28us;20us;3us;16409us;2us;50us;5us;16433us;10us;105us;2us;32768us;9us;34us;15us;22us;1us;16409us;2us;48us;1us;32768us;14us;24us;1us;16409us;2us;48us;1us;32768us;9us;26us;1us;16409us;2us;48us;16us;16403us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;90us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;134us;29us;142us;0us;16399us;1us;16409us;2us;51us;1us;32768us;9us;31us;1us;16409us;2us;48us;16us;16403us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;90us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;134us;29us;142us;0us;16400us;1us;16409us;2us;48us;16us;16403us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;90us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;134us;29us;142us;0us;16401us;1us;16409us;2us;48us;1us;32768us;9us;39us;1us;16409us;2us;48us;16us;16403us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;90us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;134us;29us;142us;0us;16402us;1us;16404us;5us;44us;2us;16405us;2us;49us;15us;66us;15us;16407us;2us;48us;3us;16409us;4us;16409us;8us;16409us;9us;16409us;10us;16409us;11us;16409us;12us;16409us;22us;16409us;23us;16409us;24us;16409us;26us;16409us;27us;16409us;28us;16409us;29us;16409us;15us;32768us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;22us;74us;23us;145us;24us;144us;26us;52us;27us;143us;28us;134us;29us;142us;2us;16409us;2us;49us;15us;66us;1us;16406us;13us;71us;0us;16408us;13us;16408us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;23us;145us;24us;144us;27us;143us;28us;134us;29us;142us;1us;16408us;28us;96us;1us;16408us;28us;97us;1us;32768us;2us;53us;2us;32768us;15us;54us;28us;96us;1us;16409us;2us;48us;1us;32768us;14us;56us;1us;16409us;2us;48us;1us;32768us;7us;58us;1us;16409us;2us;48us;16us;16403us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;90us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;134us;29us;142us;0us;16410us;1us;16409us;2us;51us;1us;32768us;7us;63us;1us;16409us;2us;48us;16us;16403us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;90us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;134us;29us;142us;0us;16411us;1us;32768us;14us;67us;0us;16412us;1us;16414us;2us;69us;13us;16413us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;23us;145us;24us;144us;27us;143us;28us;134us;29us;142us;1us;32768us;13us;71us;1us;16409us;2us;48us;13us;32768us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;23us;145us;24us;144us;27us;143us;28us;134us;29us;142us;0us;16415us;1us;32768us;2us;75us;13us;32768us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;86us;23us;145us;24us;144us;27us;143us;28us;134us;29us;142us;1us;32768us;2us;77us;1us;32768us;21us;78us;1us;32768us;2us;79us;13us;32768us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;86us;23us;145us;24us;144us;27us;143us;28us;134us;29us;142us;1us;32768us;2us;81us;1us;32768us;20us;82us;1us;32768us;2us;83us;13us;32768us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;86us;23us;145us;24us;144us;27us;143us;28us;134us;29us;142us;0us;16416us;0us;16417us;19us;16386us;0us;16403us;1us;7us;2us;12us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;3us;29us;142us;1us;32768us;14us;88us;0us;16420us;0us;16421us;19us;16386us;0us;16403us;1us;7us;2us;12us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;22us;74us;23us;145us;24us;144us;25us;18us;26us;52us;27us;143us;28us;3us;29us;142us;1us;32768us;14us;92us;0us;16422us;0us;16423us;0us;16424us;0us;16425us;0us;16426us;0us;16427us;1us;16429us;5us;100us;0us;16430us;1us;16409us;2us;48us;2us;32768us;15us;106us;28us;104us;1us;16409us;2us;48us;0us;16431us;1us;16433us;10us;105us;0us;16432us;1us;16409us;2us;48us;2us;16428us;15us;106us;28us;104us;1us;16409us;2us;48us;1us;32768us;14us;110us;0us;16434us;2us;16435us;8us;116us;9us;115us;1us;16436us;12us;119us;2us;16437us;8us;116us;9us;115us;2us;16438us;8us;116us;9us;115us;13us;32768us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;23us;145us;24us;144us;27us;143us;28us;134us;29us;142us;13us;32768us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;23us;145us;24us;144us;27us;143us;28us;134us;29us;142us;1us;16439us;11us;122us;1us;16440us;12us;119us;13us;32768us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;23us;145us;24us;144us;27us;143us;28us;134us;29us;142us;0us;16441us;1us;16442us;11us;122us;13us;32768us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;23us;145us;24us;144us;27us;143us;28us;134us;29us;142us;1us;16443us;3us;125us;1us;16444us;4us;129us;13us;32768us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;23us;145us;24us;144us;27us;143us;28us;134us;29us;142us;1us;16445us;4us;129us;0us;16446us;1us;16447us;4us;129us;13us;32768us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;15us;146us;23us;145us;24us;144us;27us;143us;28us;134us;29us;142us;0us;16448us;13us;16453us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;136us;15us;146us;23us;145us;24us;144us;27us;143us;28us;134us;29us;132us;0us;16449us;0us;16450us;0us;16451us;0us;16452us;0us;16453us;0us;16454us;0us;16455us;0us;16456us;0us;16457us;0us;16458us;0us;16459us;0us;16460us;0us;16461us;0us;16462us;1us;16409us;2us;48us;16us;16403us;3us;140us;4us;141us;8us;138us;9us;139us;10us;135us;11us;137us;12us;131us;14us;148us;15us;146us;22us;74us;23us;145us;24us;144us;26us;52us;27us;143us;28us;134us;29us;142us;0us;16463us;1us;16409us;2us;48us;1us;32768us;14us;151us;0us;16464us;|]
let _fsyacc_actionTableRowOffsets = [|0us;20us;21us;22us;24us;25us;28us;29us;47us;49us;67us;86us;103us;121us;122us;123us;124us;125us;126us;128us;131us;135us;138us;140us;142us;144us;146us;148us;165us;166us;168us;170us;172us;189us;190us;192us;209us;210us;212us;214us;216us;233us;234us;236us;239us;255us;271us;274us;276us;277us;291us;293us;295us;297us;300us;302us;304us;306us;308us;310us;327us;328us;330us;332us;334us;351us;352us;354us;355us;357us;371us;373us;375us;389us;390us;392us;406us;408us;410us;412us;426us;428us;430us;432us;446us;447us;448us;468us;470us;471us;472us;492us;494us;495us;496us;497us;498us;499us;500us;502us;503us;505us;508us;510us;511us;513us;514us;516us;519us;521us;523us;524us;527us;529us;532us;535us;549us;563us;565us;567us;581us;582us;584us;598us;600us;602us;616us;618us;619us;621us;635us;636us;650us;651us;652us;653us;654us;655us;656us;657us;658us;659us;660us;661us;662us;663us;664us;666us;683us;684us;686us;688us;|]
let _fsyacc_reductionSymbolCounts = [|1us;1us;0us;2us;2us;1us;2us;3us;2us;2us;1us;3us;2us;1us;1us;11us;8us;7us;7us;0us;1us;1us;5us;2us;1us;0us;9us;6us;3us;3us;2us;5us;11us;1us;11us;7us;3us;1us;3us;1us;2us;3us;2us;3us;0us;1us;1us;5us;2us;1us;5us;1us;1us;3us;3us;1us;3us;1us;3us;1us;1us;3us;1us;3us;1us;2us;2us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;1us;3us;5us;|]
let _fsyacc_productionToNonTerminalTable = [|0us;1us;2us;2us;2us;2us;2us;2us;2us;3us;3us;3us;3us;4us;4us;5us;5us;5us;5us;6us;6us;7us;7us;7us;8us;8us;9us;9us;9us;9us;9us;9us;9us;9us;10us;10us;11us;11us;12us;12us;13us;13us;14us;14us;15us;15us;16us;16us;17us;17us;17us;18us;19us;19us;19us;20us;20us;21us;21us;22us;23us;23us;24us;24us;25us;25us;25us;26us;26us;26us;26us;26us;26us;26us;26us;26us;26us;26us;26us;26us;26us;|]
let _fsyacc_immediateActions = [|65535us;49152us;16385us;65535us;16387us;65535us;16388us;65535us;65535us;65535us;65535us;65535us;65535us;16393us;16394us;16395us;16397us;16398us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16399us;65535us;65535us;65535us;65535us;16400us;65535us;65535us;16401us;65535us;65535us;65535us;65535us;16402us;65535us;65535us;65535us;65535us;65535us;65535us;16408us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16410us;65535us;65535us;65535us;65535us;16411us;65535us;16412us;65535us;65535us;65535us;65535us;65535us;16415us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16416us;16417us;65535us;65535us;16420us;16421us;65535us;65535us;16422us;16423us;16424us;16425us;16426us;16427us;65535us;16430us;65535us;65535us;65535us;16431us;65535us;16432us;65535us;65535us;65535us;65535us;16434us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;65535us;16441us;65535us;65535us;65535us;65535us;65535us;65535us;16446us;65535us;65535us;16448us;65535us;65535us;16450us;16451us;16452us;16453us;16454us;16455us;16456us;16457us;16458us;16459us;16460us;16461us;16462us;65535us;65535us;16463us;65535us;65535us;16464us;|]
let _fsyacc_reductions = lazy [|
# 345 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Aestas.Commands.Compiler.Language.Ast list in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startparse));
# 354 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 43 "parser.fsy"
                                    _1 
                   )
# 43 "parser.fsy"
                 : Aestas.Commands.Compiler.Language.Ast list));
# 365 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "parser.fsy"
                           [] 
                   )
# 46 "parser.fsy"
                 : 'gentype_lines));
# 375 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "parser.fsy"
                                  [Call(Identifier(_1), [])] 
                   )
# 47 "parser.fsy"
                 : 'gentype_lines));
# 386 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "parser.fsy"
                                         List.rev _1 
                   )
# 48 "parser.fsy"
                 : 'gentype_lines));
# 397 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 49 "parser.fsy"
                                     List.rev _1 
                   )
# 49 "parser.fsy"
                 : 'gentype_lines));
# 408 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_rev_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "parser.fsy"
                                             List.rev _2 
                   )
# 50 "parser.fsy"
                 : 'gentype_lines));
# 419 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_rev_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "parser.fsy"
                                                     List.rev _2 
                   )
# 51 "parser.fsy"
                 : 'gentype_lines));
# 430 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "parser.fsy"
                                             List.rev _1 
                   )
# 52 "parser.fsy"
                 : 'gentype_lines));
# 441 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 55 "parser.fsy"
                                      [_2] 
                   )
# 55 "parser.fsy"
                 : 'gentype_rev_lines));
# 452 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "parser.fsy"
                                [_1] 
                   )
# 56 "parser.fsy"
                 : 'gentype_rev_lines));
# 463 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_lines in
            let _3 = parseState.GetInput(3) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "parser.fsy"
                                                  _3::_1 
                   )
# 57 "parser.fsy"
                 : 'gentype_rev_lines));
# 475 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "parser.fsy"
                                             _1 
                   )
# 58 "parser.fsy"
                 : 'gentype_rev_lines));
# 486 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "parser.fsy"
                                 _1 
                   )
# 61 "parser.fsy"
                 : 'gentype_expr));
# 497 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_bind in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "parser.fsy"
                                _1 
                   )
# 62 "parser.fsy"
                 : 'gentype_expr));
# 508 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_maybe_space in
            let _6 = parseState.GetInput(6) :?> 'gentype_maybe_space in
            let _8 = parseState.GetInput(8) :?> 'gentype_maybe_space in
            let _10 = parseState.GetInput(10) :?> 'gentype_maybe_space in
            let _11 = parseState.GetInput(11) :?> 'gentype_expr_or_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "parser.fsy"
                                                                                                                                   Let (Identifier _3, [Lambda ([], _11)]) 
                   )
# 65 "parser.fsy"
                 : 'gentype_bind));
# 524 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_rev_fargs in
            let _5 = parseState.GetInput(5) :?> 'gentype_maybe_space in
            let _7 = parseState.GetInput(7) :?> 'gentype_maybe_space in
            let _8 = parseState.GetInput(8) :?> 'gentype_expr_or_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "parser.fsy"
                                                                                              Let (Identifier _3, [Lambda (List.rev _4, _8)]) 
                   )
# 66 "parser.fsy"
                 : 'gentype_bind));
# 539 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_maybe_space in
            let _6 = parseState.GetInput(6) :?> 'gentype_maybe_space in
            let _7 = parseState.GetInput(7) :?> 'gentype_expr_or_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 67 "parser.fsy"
                                                                                    Let (Identifier _3, _7) 
                   )
# 67 "parser.fsy"
                 : 'gentype_bind));
# 553 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_ftuple in
            let _4 = parseState.GetInput(4) :?> 'gentype_maybe_space in
            let _6 = parseState.GetInput(6) :?> 'gentype_maybe_space in
            let _7 = parseState.GetInput(7) :?> 'gentype_expr_or_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "parser.fsy"
                                                                                        Let (_3, _7) 
                   )
# 68 "parser.fsy"
                 : 'gentype_bind));
# 567 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "parser.fsy"
                           Tuple [] 
                   )
# 71 "parser.fsy"
                 : 'gentype_tuple));
# 577 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "parser.fsy"
                                     match _1 with true, [x] -> Tuple [x] | false, [x] -> x | _, ls -> Tuple(List.rev ls) 
                   )
# 72 "parser.fsy"
                 : 'gentype_tuple));
# 588 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_value_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "parser.fsy"
                                      false, [_1] 
                   )
# 75 "parser.fsy"
                 : 'gentype_rev_tuple));
# 599 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_tuple in
            let _3 = parseState.GetInput(3) :?> 'gentype_maybe_space in
            let _4 = parseState.GetInput(4) :?> 'gentype_value_expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_maybe_space in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "parser.fsy"
                                                                              (let strict, ls = _1 in (strict, _4::ls)) 
                   )
# 76 "parser.fsy"
                 : 'gentype_rev_tuple));
# 613 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "parser.fsy"
                                           (let _, ls = _1 in (true, ls)) 
                   )
# 77 "parser.fsy"
                 : 'gentype_rev_tuple));
# 624 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 80 "parser.fsy"
                                 
                   )
# 80 "parser.fsy"
                 : 'gentype_maybe_space));
# 634 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "parser.fsy"
                           
                   )
# 81 "parser.fsy"
                 : 'gentype_maybe_space));
# 644 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _4 = parseState.GetInput(4) :?> 'gentype_maybe_space in
            let _6 = parseState.GetInput(6) :?> 'gentype_maybe_space in
            let _8 = parseState.GetInput(8) :?> 'gentype_maybe_space in
            let _9 = parseState.GetInput(9) :?> 'gentype_expr_or_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 84 "parser.fsy"
                                                                                                                             Lambda ([], _9) 
                   )
# 84 "parser.fsy"
                 : 'gentype_value_expr));
# 658 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_rev_fargs in
            let _3 = parseState.GetInput(3) :?> 'gentype_maybe_space in
            let _5 = parseState.GetInput(5) :?> 'gentype_maybe_space in
            let _6 = parseState.GetInput(6) :?> 'gentype_expr_or_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 85 "parser.fsy"
                                                                                              Lambda (List.rev _2, _6) 
                   )
# 85 "parser.fsy"
                 : 'gentype_value_expr));
# 672 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_value_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "parser.fsy"
                                                             Call(_1, []) 
                   )
# 86 "parser.fsy"
                 : 'gentype_value_expr));
# 683 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_value_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_rev_args in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "parser.fsy"
                                                     Call(_1, List.rev _2) 
                   )
# 87 "parser.fsy"
                 : 'gentype_value_expr));
# 695 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_value_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_rev_args in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "parser.fsy"
                                               Call(_1, List.rev _2) 
                   )
# 88 "parser.fsy"
                 : 'gentype_value_expr));
# 707 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_value_expr in
            let _2 = parseState.GetInput(2) :?> 'gentype_maybe_space in
            let _4 = parseState.GetInput(4) :?> 'gentype_maybe_space in
            let _5 = parseState.GetInput(5) :?> 'gentype_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 89 "parser.fsy"
                                                                        Call(_5, [_1]) 
                   )
# 89 "parser.fsy"
                 : 'gentype_value_expr));
# 721 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_atom_or_lines in
            let _7 = parseState.GetInput(7) :?> 'gentype_atom_or_lines in
            let _11 = parseState.GetInput(11) :?> 'gentype_atom_or_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 90 "parser.fsy"
                                                                                                                If(_3, _7, _11) 
                   )
# 90 "parser.fsy"
                 : 'gentype_value_expr));
# 734 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 91 "parser.fsy"
                                _1 
                   )
# 91 "parser.fsy"
                 : 'gentype_value_expr));
# 745 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_atom_or_lines in
            let _7 = parseState.GetInput(7) :?> 'gentype_atom_or_lines in
            let _11 = parseState.GetInput(11) :?> 'gentype_atom_or_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "parser.fsy"
                                                                                                                If(_3, _7, _11) 
                   )
# 94 "parser.fsy"
                 : 'gentype_if));
# 758 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_atom_or_lines in
            let _7 = parseState.GetInput(7) :?> 'gentype_atom_or_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "parser.fsy"
                                                                                 If(_3, _7, [Unit]) 
                   )
# 95 "parser.fsy"
                 : 'gentype_if));
# 770 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "parser.fsy"
                                                        _2 
                   )
# 98 "parser.fsy"
                 : 'gentype_atom_or_lines));
# 781 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "parser.fsy"
                                [_1] 
                   )
# 99 "parser.fsy"
                 : 'gentype_atom_or_lines));
# 792 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_lines in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "parser.fsy"
                                                        _2 
                   )
# 102 "parser.fsy"
                 : 'gentype_expr_or_lines));
# 803 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "parser.fsy"
                                [_1] 
                   )
# 103 "parser.fsy"
                 : 'gentype_expr_or_lines));
# 814 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "parser.fsy"
                                      [_2] 
                   )
# 106 "parser.fsy"
                 : 'gentype_rev_args));
# 825 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_args in
            let _3 = parseState.GetInput(3) :?> 'gentype_atom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "parser.fsy"
                                               _3::_1 
                   )
# 107 "parser.fsy"
                 : 'gentype_rev_args));
# 837 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "parser.fsy"
                                    [_2] 
                   )
# 110 "parser.fsy"
                 : 'gentype_rev_fargs));
# 848 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_fargs in
            let _3 = parseState.GetInput(3) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "parser.fsy"
                                              _3::_1 
                   )
# 111 "parser.fsy"
                 : 'gentype_rev_fargs));
# 860 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "parser.fsy"
                           Tuple [] 
                   )
# 114 "parser.fsy"
                 : 'gentype_ftuple));
# 870 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_ftuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "parser.fsy"
                                      match _1 with [x] -> x | x -> Tuple(List.rev x) 
                   )
# 115 "parser.fsy"
                 : 'gentype_ftuple));
# 881 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_fatom in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "parser.fsy"
                                 [_1] 
                   )
# 118 "parser.fsy"
                 : 'gentype_rev_ftuple));
# 892 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_ftuple in
            let _3 = parseState.GetInput(3) :?> 'gentype_maybe_space in
            let _4 = parseState.GetInput(4) :?> 'gentype_fatom in
            let _5 = parseState.GetInput(5) :?> 'gentype_maybe_space in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "parser.fsy"
                                                                          _4::_1 
                   )
# 119 "parser.fsy"
                 : 'gentype_rev_ftuple));
# 906 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "parser.fsy"
                                          TailPattern _1 
                   )
# 123 "parser.fsy"
                 : 'gentype_fatom));
# 917 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "parser.fsy"
                              Identifier _1 
                   )
# 124 "parser.fsy"
                 : 'gentype_fatom));
# 928 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_maybe_space in
            let _3 = parseState.GetInput(3) :?> 'gentype_ftuple in
            let _4 = parseState.GetInput(4) :?> 'gentype_maybe_space in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "parser.fsy"
                                                                                 _3 
                   )
# 125 "parser.fsy"
                 : 'gentype_fatom));
# 941 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom_eq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "parser.fsy"
                                     _1 
                   )
# 127 "parser.fsy"
                 : 'gentype_atom));
# 952 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom_plus in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "parser.fsy"
                                     _1 
                   )
# 130 "parser.fsy"
                 : 'gentype_atom_eq));
# 963 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom_eq in
            let _3 = parseState.GetInput(3) :?> 'gentype_atom_eq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 131 "parser.fsy"
                                                 Call(Identifier "=", [_1; _3]) 
                   )
# 131 "parser.fsy"
                 : 'gentype_atom_eq));
# 975 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom_eq in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_atom_eq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "parser.fsy"
                                                      Call(Identifier _2, [_1; _3]) 
                   )
# 132 "parser.fsy"
                 : 'gentype_atom_eq));
# 988 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom_mul in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "parser.fsy"
                                    _1 
                   )
# 135 "parser.fsy"
                 : 'gentype_atom_plus));
# 999 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom_plus in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_atom_plus in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "parser.fsy"
                                                       Call(Identifier _2, [_1; _3]) 
                   )
# 136 "parser.fsy"
                 : 'gentype_atom_plus));
# 1012 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom_powertuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "parser.fsy"
                                           _1 
                   )
# 139 "parser.fsy"
                 : 'gentype_atom_mul));
# 1023 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom_mul in
            let _2 = parseState.GetInput(2) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_atom_mul in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "parser.fsy"
                                                     Call(Identifier _2, [_1; _3]) 
                   )
# 140 "parser.fsy"
                 : 'gentype_atom_mul));
# 1036 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_power_tuple in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "parser.fsy"
                                                        match _1 with [x] -> x | x -> Tuple(List.rev x) 
                   )
# 142 "parser.fsy"
                 : 'gentype_atom_powertuple));
# 1047 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "parser.fsy"
                                      [_1] 
                   )
# 145 "parser.fsy"
                 : 'gentype_rev_power_tuple));
# 1058 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_rev_power_tuple in
            let _3 = parseState.GetInput(3) :?> 'gentype_atom_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "parser.fsy"
                                                            _3::_1 
                   )
# 146 "parser.fsy"
                 : 'gentype_rev_power_tuple));
# 1070 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom_unary in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "parser.fsy"
                                      _1 
                   )
# 149 "parser.fsy"
                 : 'gentype_atom_field));
# 1081 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_atom_field in
            let _3 = parseState.GetInput(3) :?> 'gentype_atom_field in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "parser.fsy"
                                                     Call(Identifier ".", [_1; _3]) 
                   )
# 150 "parser.fsy"
                 : 'gentype_atom_field));
# 1093 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "parser.fsy"
                                _1 
                   )
# 153 "parser.fsy"
                 : 'gentype_atom_unary));
# 1104 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> float in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "parser.fsy"
                                          match _1 with "+" -> Number _2 | "-" -> Number (-_2) | _ -> failwith "Invalid unary operator" 
                   )
# 154 "parser.fsy"
                 : 'gentype_atom_unary));
# 1116 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _2 = parseState.GetInput(2) :?> 'gentype_term in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "parser.fsy"
                                        Call(Identifier _1, [_2]) 
                   )
# 155 "parser.fsy"
                 : 'gentype_atom_unary));
# 1128 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "parser.fsy"
                              Identifier _1 
                   )
# 158 "parser.fsy"
                 : 'gentype_term));
# 1139 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "parser.fsy"
                                       Identifier "..."
                   )
# 159 "parser.fsy"
                 : 'gentype_term));
# 1149 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "parser.fsy"
                                   Identifier _1 
                   )
# 160 "parser.fsy"
                 : 'gentype_term));
# 1160 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "parser.fsy"
                                   Identifier _1 
                   )
# 161 "parser.fsy"
                 : 'gentype_term));
# 1171 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "parser.fsy"
                                      Identifier _1 
                   )
# 162 "parser.fsy"
                 : 'gentype_term));
# 1182 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "parser.fsy"
                                 Identifier "=" 
                   )
# 163 "parser.fsy"
                 : 'gentype_term));
# 1192 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "parser.fsy"
                                 Identifier "^" 
                   )
# 164 "parser.fsy"
                 : 'gentype_term));
# 1202 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "parser.fsy"
                               Identifier "." 
                   )
# 165 "parser.fsy"
                 : 'gentype_term));
# 1212 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "parser.fsy"
                                  Number _1 
                   )
# 166 "parser.fsy"
                 : 'gentype_term));
# 1223 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "parser.fsy"
                                  String _1 
                   )
# 167 "parser.fsy"
                 : 'gentype_term));
# 1234 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "parser.fsy"
                                Bool true 
                   )
# 168 "parser.fsy"
                 : 'gentype_term));
# 1244 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "parser.fsy"
                                 Bool false 
                   )
# 169 "parser.fsy"
                 : 'gentype_term));
# 1254 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_maybe_space in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "parser.fsy"
                                                              Unit 
                   )
# 170 "parser.fsy"
                 : 'gentype_term));
# 1265 "parser.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_maybe_space in
            let _3 = parseState.GetInput(3) :?> 'gentype_tuple in
            let _4 = parseState.GetInput(4) :?> 'gentype_maybe_space in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "parser.fsy"
                                                                                _3 
                   )
# 171 "parser.fsy"
                 : 'gentype_term));
|]
# 1279 "parser.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions = _fsyacc_reductions.Value;
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 33;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let parse lexer lexbuf : Aestas.Commands.Compiler.Language.Ast list =
    engine lexer lexbuf 0 :?> _
